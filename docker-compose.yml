version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: transcriber_redis
    ports:
      - "6379:6379" # Expose for simplicity during dev
    volumes:
      - redis_data:/data # Optional: Persist Redis data across restarts
    restart: unless-stopped

  web: # Uses CMD from Dockerfile now
    build:
      context: .
      dockerfile: Dockerfile
    container_name: transcriber_web
    ports:
      - "5000:5000"
    volumes:
      - ./data:/data
      - ./output:/output
      - .:/app # Development mount
    environment:
      - REDIS_URL=redis://redis:6379/0
      - FLASK_SECRET_KEY=you_really_should_change_this_secret_key # CHANGE THIS
      - PYTHONUNBUFFERED=1
      - EVENTLET_HUB_USE_SELECT=1 # Keep this for potential compatibility
    depends_on:
      - redis
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: transcriber_worker
    # --- SIMPLIFIED COMMAND - relies on WORKDIR and PYTHONPATH from Dockerfile ---
    command: celery -A celery_app:celery worker --loglevel=info -P eventlet -c 1
    volumes:
      - ./data:/data
      - ./output:/output
      - .:/app # Development mount
    environment:
      - REDIS_URL=redis://redis:6379/0
      - NVIDIA_VISIBLE_DEVICES=all
      - PYTHONUNBUFFERED=1
      - EVENTLET_HUB_USE_SELECT=1 # Match web service setting
      # PYTHONPATH now set in Dockerfile
    depends_on:
      - redis
      # - web # Usually not needed
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

volumes:
  redis_data: